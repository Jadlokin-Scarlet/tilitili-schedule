<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="club.tilitili.schedule.dao.mapper.TilitiliLogMapper">
	<resultMap id="TilitiliLog" type="club.tilitili.schedule.entity.TilitiliLog">
		<result  property="updateTime"  column="update_time"/>
		<result  property="runTime"  column="run_time"/>
		<result  property="createTime"  column="create_time"/>
		<result  property="success"  column="success"/>
		<result  property="name"  column="name"/>
		<result  property="id"  column="id"/>
		<result  property="failReason"  column="fail_reason"/>
	</resultMap>
	<sql id="Base_Column_List">a.`update_time`,a.`run_time`,a.`create_time`,a.`success`,a.`name`,a.`id`,a.`fail_reason`</sql>
	<insert id="addTilitiliLogSelective" parameterType="club.tilitili.schedule.entity.TilitiliLog" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO tilitili_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			`update_time`,
			<if test="runTime!= null" >`run_time`,</if>
			`create_time`,
			<if test="success!= null" >`success`,</if>
			<if test="name!= null" >`name`,</if>
			<if test="failReason!= null" >`fail_reason`,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			now(),
			<if test="runTime!= null" >#{runTime},</if>
			now(),
			<if test="success!= null" >#{success},</if>
			<if test="name!= null" >#{name},</if>
			<if test="failReason!= null" >#{failReason},</if>
		</trim>
	</insert>
	<update id="updateTilitiliLogSelective"  parameterType="club.tilitili.schedule.entity.TilitiliLog">
		update tilitili_log <set>
			`update_time`=now(),
			<if test="runTime!=null">`run_time`=#{runTime},</if>
			<if test="success!=null">`success`=#{success},</if>
			<if test="name!=null">`name`=#{name},</if>
			<if test="failReason!=null">`fail_reason`=#{failReason},</if>
		</set>
		where id=#{id}
	</update>
	<select id="countTilitiliLogByCondition"  parameterType="TilitiliLogQuery" resultType="java.lang.Integer">
		select count(1) from tilitili_log a <where>
			<if test="updateTime!=null">and `update_time`=#{updateTime}</if>
			<if test="runTime!=null">and `run_time`=#{runTime}</if>
			<if test="createTime!=null">and `create_time`=#{createTime}</if>
			<if test="success!=null">and `success`=#{success}</if>
			<if test="name!=null">and `name`=#{name}</if>
			<if test="id!=null">and `id`=#{id}</if>
			<if test="failReason!=null">and `fail_reason`=#{failReason}</if>
		</where>
	</select>
	<select id="getTilitiliLogByCondition"  parameterType="TilitiliLogQuery" resultMap="TilitiliLog">
		select <include refid="Base_Column_List" /> from tilitili_log a <where>
			<if test="updateTime!=null">and `update_time`=#{updateTime}</if>
			<if test="runTime!=null">and `run_time`=#{runTime}</if>
			<if test="createTime!=null">and `create_time`=#{createTime}</if>
			<if test="success!=null">and `success`=#{success}</if>
			<if test="name!=null">and `name`=#{name}</if>
			<if test="id!=null">and `id`=#{id}</if>
			<if test="failReason!=null">and `fail_reason`=#{failReason}</if>
		</where>
		<if test="sorter!=null and sorted!=null">order by ${sorter} ${sorted}</if>
		<if test="pageNo!=null and pageSize!=null">limit #{start}, #{pageSize}</if>
	</select>
	<select id="getTilitiliLogById" resultMap="TilitiliLog">
		select <include refid="Base_Column_List" />
		from tilitili_log a where id = #{id}
	</select>
</mapper>