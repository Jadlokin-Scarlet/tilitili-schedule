{"version":3,"sources":["utils/prototypeUtil.js","utils/HtmlUtils.js","app/LoginModal.jsx","api/ajax.js","api/index.js","components/simple-table/PureTable.jsx","components/simple-table/index.jsx","components/cache-input/index.jsx","components/select-input/SelectInput.jsx","components/default-table/index.jsx","components/drag-modal/DragModal.jsx","components/default-modal-button/DefaultModalButton.jsx","pages/JobManager/AddJob.jsx","components/simple-modal-button/index.jsx","pages/JobManager/StartJob.jsx","pages/JobManager/RunJob.jsx","pages/JobManager/StopJob.jsx","config/menuConfig.jsx","pages/JobManager/index.jsx","app/index.jsx","serviceWorker.js","index.js"],"names":["Object","defineProperty","Date","prototype","value","fmt","o","this","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","Paragraph","isNull","obj","or","undefined","isNotNull","isEmpty","list","isNotEmpty","isEmptyObject","keys","isNotEmptyObject","isBlank","string","getParagraph","text","smallText","placement","content","ellipsis","style","marginBottom","Img","props","src","loading","alt","onClick","InputSelect","toString","onChange","onSelect","showSearch","autoClearSearchValue","allowClear","dropdownMatchSelectWidth","optionFilterProp","filterOption","inputSelectFilterOption","placeholder","size","For","resource","then","item","index","Option","key","input","option","children","toLowerCase","indexOf","runFunction","func","If","boolean","IfClass","result","object","Array","isArray","ForArray","ForObject","mapFun","map","filterFun","filter","flatMap","tmp","fun","answer","convertToPrams","pagination","filters","sorter","if","params","assign","toLine","field","sorted","order","emptyFunc","selfFunc","a","compose","firstFun","secondFun","enumerable","configurable","name","checkResp","data","success","message","error","defaultRowKey","record","idRowKey","id","defaultScroll","x","y","LoginModal","login","state","userName","password","onLogin","req","refresh","register","onRegister","setState","type","align","className","span","justify","layout","Item","label","labelCol","wrapperCol","event","target","onPressEnter","disabled","Component","service","axios","create","baseURL","get","url","handleGet","headers","paramsSerializer","Qs","stringify","arrayFormat","post","handlePost","promise","Promise","resolve","reject","window","location","reload","catch","reason","listJob","startJob","stopJob","runJob","addJob","PureTable","PureComponent","SimpleTable","handleSelectRow","callback","rowKey","isMultipleSelect","onSelectRow","selectedRowKey","selectedRowKeys","selectedRows","j","push","splice","handleClick","handleDoubleClick","onDoubleClick","paginationProps","showTotal","total","range","pageSizeOptions","position","showSizeChanger","showQuickJumper","e","includes","tagName","setTimeout","bind","scroll","pageSize","current","columns","bordered","dataSource","rowClassName","components","onRow","CacheInput","startEdit","isEdit","cacheValue","endEdit","change","submit","paste","preventDefault","clipboardData","getData","width","onFocus","onBlur","onPaste","SelectInput","handleScroll","persist","rmHeight","scrollHeight","scrollTop","clHeight","clientHeight","scrollPage","handleBlur","mode","someFilters","onPopupScroll","DefaultTable","componentDidMount","columnsConfig","newColumn","onResourceLoaded","getResources","refreshWithPrams","resources","updateFilters","defaultFilters","handleUpdated","getDataByCondition","onGetData","isSubmit","reqId","random","dataLoading","getDataApi","updateSelectedRow","needResourcesList","onResourcesInit","otherResources","resourcesLoading","keyList","newSelectedRows","newSelectedRowKeys","setSelectRows","getDefaultParams","defaultSorter","defaultPageSize","defaultCurrent","getRowHtml","document","getElementsByClassName","setParams","onUpdateParams","updateParams","setFilter","forEach","element","clearFilters","refreshWithDefaultPrams","handleRefresh","handleReset","handleSelectRows","handleNotSelectAll","handleSelectAll","handleTableChange","handleKeyUp","keyCode","visible","clickRow","handleVisibleChange","handleRowClassName","row","onRowClassName","columnConfig","column","title","dataIndex","newSearchColumn","newChooseColumn","newSorterColumn","newChooseRenderColumn","newImage","newChooseInput","newButtonColumn","render","oldRender","split","splitToList","afterRender","href","rel","chooseMap","filteredValue","filterMultiple","tag","newTag","renderHidden","sortOrder","converseUrl","height","maxWidth","else","onButtonColumnInit","color","defaultParams","prevProps","prevState","snapshot","onButtonsInit","selectRowLength","rowLength","onKeyUp","tabIndex","elseIf","endIf","isShowRowSelection","onSelectAll","DragModal","initDragDom","dragDom","console","log","left","initLeft","minWidth","top","zIndex","onShowModal","from","onMouseDown","dragging","dragDomRect","getBoundingClientRect","left0","clientX","top0","clientY","onmousemove","onMouseUp","Number","now","innerWidth","isInteger","parseFloat","tLeft","tTop","nextProps","nextState","nextContext","wrapClassName","isHidden","mask","ref","ele","modal","TextArea","DefaultModalButton","setVisible","onVisibleChange","getVisible","handleShowModal","selectedRow","formConfig","isShow","newState","config","selectedIndex","showModal","handleOk","onSuccess","isTheGroup","groupBy","every","format","childConfig","join","modalRender","closeModal","updateApi","handleCancel","handleChange","col","buttonStyle","marginLeft","hidden","confirmLoading","onOk","onCancel","footer","centered","converseToForm","onSubmit","gutter","flatThen","param","jndex","converseToFormItem","min","max","suffix","autoSize","itemCol","listKey","margin","showTime","AddJob","SimpleModalButton","isShowModal","isCloseModal","finally","buttonText","StartJob","status","RunJob","StopJob","menuList","icon","component","handleButtonsInit","that","handleResourcesInit","statusList","Header","Content","Sider","Footer","Title","menuMap","converseToMap","App","checkIsLogin","loginOut","user","reqLoginOut","reqLogin","username","toggleCollapsed","collapsed","handleSelected","selectedKey","selectedKeyList","unshift","handleSelectedFirstKey","selectedFirstKey","remove","targetKey","onEdit","action","createMenu","menu","to","SubMenu","display","selectedList","minHeight","background","float","level","strong","selectedKeys","selectable","theme","textAlign","duration","interval","componentProps","borderRight","marginTop","marginRight","hideAdd","activeKey","selected","TabPane","tab","closable","reverse","animation","opacity","transform","selectedTab","reqRegister","backgroundColor","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59b22064.chunk.js","sourcesContent":["/*eslint no-extend-native: [\"error\", { \"exceptions\": [\"Date\"] }]*/\nObject.defineProperty(Date.prototype, \"format\", {value: function(fmt) {\n    var o = {\n        \"M+\": this.getMonth() + 1,                 //月份\n        \"d+\": this.getDate(),                    //日\n        \"h+\": this.getHours(),                   //小时\n        \"m+\": this.getMinutes(),                 //分\n        \"s+\": this.getSeconds(),                 //秒\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n        \"S\": this.getMilliseconds()             //毫秒\n    };\n    if (/(y+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    for (var k in o) {\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n        }\n    }\n    return fmt;\n}});\n\n\n// String.prototype.endsWith = function(str){\n//     if(isEmpty(str) || str.length > this.length) return false;\n//     return this.substring(this.length - str.length) === str;\n// }\n// String.prototype.startsWith=function(str){\n//     if(isEmpty(str) || str.length > this.length) return false;\n//     return this.substr(0, str.length) === str;\n// }\n// String.prototype.contains=function(str){\n//     if(isEmpty(str) || str.length > this.length) return false;\n//     return this.indexOf(str) >= 0;\n// }","import React from \"react\";\nimport {Popover, Typography, message, Select} from \"antd\";\nconst { Paragraph } = Typography;\n\nexport const isNull = (obj, or) => {\n    if (or === undefined) {\n        return obj === undefined || obj === null;\n    }else {\n        return obj === undefined || obj === null? or: obj;\n    }\n};\nexport const isNotNull = obj => !isNull(obj);\nexport const isEmpty = list => list === undefined || list === null || list.length === 0;\nexport const isNotEmpty = list =>  !isEmpty(list);\nexport const isEmptyObject = obj => isNull(obj) || Object.keys(obj).length === 0\nexport const isNotEmptyObject = obj => !isEmptyObject(obj)\nexport const isBlank = (string, or) => or === undefined\n    ? string === undefined || string === null || string.length === 0\n    : string === undefined || string === null || string.length === 0? or: string;\nexport const isNotBlank = (string, or) => or === undefined? !isBlank(string): !isBlank(string)? or: string\n\nexport function getParagraph(text, smallText) {\n    return (\n        <Popover placement=\"right\" content={text}>\n            <Paragraph ellipsis style={{marginBottom: \"0em\"}}>{smallText || text}</Paragraph>\n        </Popover>\n    )\n}\nexport const Img = (props) => {\n    return <img src={props.loading?\"/loading.png\":props.src} style={props.style} alt={props.alt} onClick={props.onClick}/>\n}\n\nexport const InputSelect = (props) => (\n    <Select value={isNull(props.value)? props.value: props.value.toString()} onChange={props.onChange} onSelect={props.onSelect} showSearch autoClearSearchValue allowClear dropdownMatchSelectWidth optionFilterProp=\"children\" filterOption={inputSelectFilterOption} placeholder={props.placeholder} size={props.size}>\n        {For(props.resource).then((item, index) => (\n            <Select.Option key={index} value={isNull(item.value)? item.value: item.value.toString()}>{isNull(item.text)? item.text: item.text.toString()}</Select.Option>\n        ))}\n    </Select>\n)\n\nexport const inputSelectFilterOption = (input, option) => {\n    return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n}\n\n//注意，此工具会会渲染每个条件的全部元素，注意性能和空值处理\nconst runFunction = func => typeof func === \"function\"? func(): func;\nexport function If(boolean) {\n    return new IfClass(boolean);\n}\n\nexport class IfClass {\n    constructor(boolean) {\n        this.boolean = boolean;\n        this.result = null;\n    }\n\n    if (boolean) {\n        this.boolean = boolean;\n        return this;\n    }\n\n    then (result) {\n        if (this.boolean && this.result == null) {\n            this.result = result;\n        }\n        return this;\n    }\n\n    elseIf (boolean) {\n        this.boolean = boolean;\n        return this;\n    }\n\n    else (result) {\n        if (this.result != null) {\n            return runFunction(this.result);\n        }else {\n            return runFunction(result);\n        }\n    }\n\n    endIf () {\n        return runFunction(this.result);\n    }\n}\n\nexport const For = object => {\n    if (Array.isArray(object)) {\n        return new ForArray(object);\n    }\n    if (typeof object === 'object') {\n        return new ForObject(object);\n    }\n    return new ForArray([]);\n}\n\nclass ForArray {\n    constructor(list) {\n        this.list = list;\n    }\n    then(mapFun) {\n        return this.list.map(mapFun)\n    }\n    if(filterFun) {\n        this.list = this.list.filter(filterFun)\n        return this;\n    }\n    flatThen(mapFun) {\n        return this.list.flatMap(mapFun);\n    }\n}\n\nclass ForObject {\n    constructor(object) {\n        this.object = object;\n    }\n    then(mapFun) {\n        const tmp = {};\n        for (const key of Object.keys(this.object)) {\n            tmp[key] = mapFun(key, this.object[key]);\n        }\n        return tmp;\n    }\n    if(filterFun) {\n        const tmp = {};\n        for (const key of Object.keys(this.object)) {\n            if (filterFun(key, this.object[key])) {\n                tmp[key] = this.object[key];\n            }\n        }\n        this.object = tmp;\n        return this;\n    }\n    every(fun) {\n        let answer = true\n        for (const key of Object.keys(this.object)) {\n            answer &= fun(key, this.object[key]);\n        }\n        return answer;\n    }\n}\n\n\nexport const convertToPrams = (pagination = {}, filters = {}, sorter = {}) => {\n    filters = For(filters).if((key,value) => isNotNull(value))\n        .then((key, value) => value[0]);\n    const params = Object.assign({}, filters, pagination);\n    if (isNotEmptyObject(sorter)) {\n        params.sorter = toLine(sorter.field)\n        params.sorted = sorter.order === 'descend' ? 'desc' : 'asc';\n    }\n    // return {query: params};\n    return params\n}\n\nexport const emptyFunc = () => {}\nexport const selfFunc = a => a\n\nexport const compose = (firstFun = selfFunc, secondFun = selfFunc) => {\n    return (...props) => secondFun(firstFun(...props));\n}\n\nexport const defineProperty = (obj, key, value) => {\n    return Object.defineProperty(obj, key, {\n        enumerable: true,\n        configurable: true,\n        value\n    })\n}\n\nexport const toLine = (name) => {\n    return name.replace(/([A-Z])/g,\"_$1\").toLowerCase();\n}\n\nexport const splitToList = (key, text) => {\n    if (isNotNull(text)) {\n        return text.split(key).map(text => <p key={text} style={{marginBottom: \"0em\"}}>{text}</p>);\n    }\n}\n\nexport const checkResp = data => {\n    if (isNull(data)) {\n        data = {};\n    }\n    if (isNull(data.success)) {\n        data.success = true;\n    }\n    if(!data.success) {\n        message.error(isBlank(data.message, '失败'));\n        return data;\n    } else {\n        return data;\n    }\n}\n\nexport const defaultRowKey = (record, index) => index;\nexport const idRowKey = (record, index) => record.id;\n\nexport const defaultScroll = {x:1,y: true}","import React, {Component} from \"react\";\nimport {Button, Col, Form, Icon, Input, Row} from \"antd\";\n\nexport default class LoginModal extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: null,\n            password: null,\n        }\n    }\n\n    login = () => {\n        const { userName, password } = this.state;\n        this.props.onLogin(userName, password, req => {\n            if (req.data?.success === true) {\n                this.refresh();\n            }\n        })\n    }\n\n    register = () => {\n        const { userName, password } = this.state;\n        this.props.onRegister(userName, password);\n        this.refresh();\n    }\n\n    refresh = () => {\n        this.setState({\n            userName: null,\n            password: null,\n        })\n    }\n\n    render() {\n        return <Row type=\"flex\" align=\"middle\" className=\"max-height\">\n            <Col span={24}>\n                <Row type=\"flex\" justify=\"space-around\">\n                    <Col>\n                        <Icon type=\"lock\" className=\"primary-color font-size-100px\"/>\n                    </Col>\n                </Row>\n                <Row type=\"flex\" justify=\"space-around\">\n                    <Col span={6}>\n                        <Form layout=\"horizontal\">\n                            <Form.Item label=\"用户名\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }}>\n                                <Input value={this.state.userName} onChange={event => this.setState({userName: event.target.value})} type=\"userName\"/>\n                            </Form.Item>\n                            <Form.Item label=\"密码\" labelCol={{ span: 6 }} wrapperCol={{ span: 12 }}>\n                                <Input value={this.state.password} onChange={event => this.setState({password: event.target.value})} onPressEnter={this.login} type=\"password\"/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                                    <Col>\n                                        <Button type=\"primary\" onClick={this.login}>\n                                            登陆\n                                        </Button>\n                                    </Col>\n                                    <Col>\n                                        <Button type=\"primary\" onClick={this.register} disabled>\n                                            注册\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    }\n\n}","/*\n发送异步ajax请求函数模块\n    |- 封装axios库\n    |- 函数返回promise对象\n */\n\nimport axios from 'axios'\n// import {hashHistory} from \"react-router-dom\"\n\n\nimport {message} from \"antd\"\nimport  Qs from 'qs';\nimport {isNull} from \"../utils/HtmlUtils\";\n\nconst service = axios.create({\n    baseURL: '/api/'\n})\n\nexport function get(url,data={}) {\n    return handleGet(service.get(url, {\n        params: data,\n        headers:{\"Content-Type\": \"application/json\"},\n        paramsSerializer: function(params) {\n            return Qs.stringify(params, {arrayFormat: 'repeat'})\n        },\n    }))\n}\n\nexport function post(url, data = {}) {\n    return handlePost(service.post(url, data, {\n        headers:{\"Content-Type\": \"application/json\"}\n    }))\n}\n\nexport function del(url, data = {}) {\n    return handlePost(service.delete(url, data, {\n        headers:{\"Content-Type\": \"application/json\"}\n    }))\n}\n\nexport function patch(url, data = {}) {\n    return handlePost(service.patch(url, data, {\n        headers:{\"Content-Type\": \"application/json\"}\n    }))\n}\nfunction handleGet(promise) {\n    return new Promise((resolve, reject) => {\n        promise.then(req => {\n            if (isNull(req.data)) {\n                message.error( \"请求失败\")\n                reject(req)\n            }\n            const data = req.data;\n            if (data.success) {\n                resolve(data.data)\n            } else if (data.message === \"请重新登录\") {\n                window.location.reload();\n            } else {\n                message.error(isNull(data.message, \"请求失败\"));\n                reject(req)\n            }\n        }).catch(reason => {\n            message.error(isNull(reason.message, \"请求异常2\"));\n            reject(reason)\n        });\n    })\n}\n\nfunction handlePost(promise) {\n    return new Promise((resolve, reject) => {\n        promise.then(req => {\n            if (isNull(req.data)) {\n                message.error( \"请求异常\")\n                reject(req)\n            }\n            const data = req.data;\n            if (data.success) {\n                message.success(isNull(data.message, \"请求成功\"))\n                resolve(data.data)\n            } else if (data.message === \"请重新登录\") {\n                window.location.reload();\n            } else {\n                message.error(isNull(data.message, \"请求失败\"));\n                reject(req)\n            }\n        }).catch(reason => {\n            message.error(isNull(reason.message, \"请求异常\"));\n            reject(reason)\n        });\n    })\n}\n","/*\n应用中所有接口请求模块\n    |- 每个接口返回的都是promise对象\n */\n\nimport {del, get, post} from \"./ajax\"\n\n// 登录\nexport const isLogin = () => get('/user/isLogin')\nexport const reqLogin = (userName, password) => post('/user/login', { userName, password })\nexport const reqLoginOut = () => post('/user/loginOut')\n\n// 获取资源列表\nexport const getResources = (data) => get('/resources', data)\n\n// Job列表\nexport const listJob = (data) => get('/job/list', data)\nexport const startJob = (data) => get(`/job/start`, data)\nexport const stopJob = (data) => get(`/job/stop`, data)\nexport const runJob = (data) => get(`/job/run`, data)\nexport const addJob = (data) => get(`/job/add`, data)\n","import React, {PureComponent} from \"react\";\nimport { Table } from 'antd';\n\nexport default class PureTable extends PureComponent{\n\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if (this.props.columns.length > 30) {\n    //         console.log(\"main reload\")\n    //     }else if (this.props.columns.length > 20){\n    //         console.log(\"sub reload\");\n    //     }\n    //     for (const key of Object.keys(prevProps)) {\n    //         if (prevProps[key] !== this.props[key]) {\n    //             console.log(key)\n    //         }\n    //     }\n    // }\n\n\n    render() {\n        return (\n            <Table\n                {...this.props}\n            />\n        )\n    }\n\n}","import React, {PureComponent} from 'react';\nimport {defaultRowKey, emptyFunc} from \"../../utils/HtmlUtils\";\nimport PureTable from \"./PureTable\";\n\nexport default class SimpleTable extends PureComponent {\n\n    handleSelectRow = (record, index, callback) => {\n        const {rowKey=defaultRowKey,isMultipleSelect,onSelectRow=emptyFunc} = this.props;\n        const selectedRowKey = rowKey(record, index);\n\n        let {selectedRowKeys,selectedRows} = this.props;\n\n        if (isMultipleSelect !== true) {\n            selectedRowKeys = [selectedRowKey];\n            selectedRows = [record]\n        }else {\n            const j = selectedRowKeys.indexOf(selectedRowKey);\n            if (j === -1) {\n                selectedRows.push(record);\n                selectedRowKeys.push(selectedRowKey);\n            }else {\n                selectedRows.splice(j, 1);\n                selectedRowKeys.splice(j, 1);\n            }\n        }\n        onSelectRow(selectedRowKeys, selectedRows, callback)\n    }\n\n    handleClick = (record, index) => {\n        const {onClick=emptyFunc} = this.props;\n        this.handleSelectRow(record, index, () => {\n            onClick(record, index);\n        });\n    }\n\n    handleDoubleClick = (record, index) => {\n        const {onDoubleClick=emptyFunc} = this.props;\n        onDoubleClick(record, index)\n    }\n\n    paginationProps = {\n        showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n        pageSizeOptions: this.props.pageSizeOptions || ['5', '10', '20', '50', '100'],\n        position: this.props.position,\n        showSizeChanger: true,\n        showQuickJumper: true,\n    }\n\n    onClick = (record, index) => {\n        return {\n            onClick: e => {\n                if (['TD', 'DIV'].includes(e.target.tagName)) {\n                    setTimeout(this.handleClick.bind(this, record, index), 0);\n                }\n            },\n            onDoubleClick: e => {\n                if (['TD', 'DIV'].includes(e.target.tagName)) {\n                    setTimeout(this.handleDoubleClick.bind(this, record, index), 0);\n                }\n            }\n        }\n    }\n\n    render() {\n        const { data, rowKey, scroll, size} = this.props;\n        const { list, total, pageSize, current } = data;\n\n        this.paginationProps.pageSize = pageSize;\n        this.paginationProps.total = total;\n        this.paginationProps.current = current;\n\n        return (\n            <PureTable\n                columns={this.props.columns}\n                bordered\n                rowKey={rowKey || defaultRowKey}\n                size={size}\n                scroll={scroll}\n                dataSource={list}\n                pagination={this.paginationProps}\n                loading={this.props.loading}\n                onChange={this.props.onChange}\n                rowClassName={this.props.rowClassName}\n                components={this.props.components}\n                onRow={this.onClick}\n            />\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {Input} from \"antd\";\nimport {isBlank} from \"../../utils/HtmlUtils\";\n\nexport default class CacheInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cacheValue: props.value,\n            isEdit: false,\n        }\n    }\n\n    startEdit = () => {\n        this.setState({isEdit: true, cacheValue: this.props.value})\n    }\n\n    endEdit = () => {\n        this.setState({isEdit: false, cacheValue: this.props.value})\n    }\n\n    change = e => {\n        this.setState({cacheValue: e.target.value})\n        if (! this.state.isEdit) {\n            this.props.onChange(isBlank(e.target.value, null))\n        }\n    }\n\n    submit = () => {\n        this.props.onChange(this.state.cacheValue);\n    }\n\n    paste = e => {\n        e.preventDefault();\n        const value = e.clipboardData.getData('Text');\n        this.setState({cacheValue: value})\n        this.props.onChange(value);\n    }\n\n    render() {\n        const {placeholder, value, width, size=\"small\", disabled=false} = this.props;\n        const {cacheValue, isEdit} = this.state;\n        return (\n            <Input\n                disabled={disabled}\n                size={size}\n                allowClear\n                placeholder={placeholder}\n                value={isEdit? cacheValue: value}\n                style={{width: `${width}px`}}\n                onFocus={this.startEdit}\n                onBlur={this.endEdit}\n                onChange={this.change}\n                onPressEnter={this.submit}\n                onPaste={this.paste}\n            />\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {Select} from \"antd\";\nimport {For, inputSelectFilterOption, isNull} from \"../../utils/HtmlUtils\";\n\nexport default class SelectInput extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            scrollPage: 1,\n            // keyWords: '',\n            // optionData: [],\n        }\n    }\n    handleScroll = e => {\n        e.persist();\n        const { target } = e;\n        // scrollHeight：代表包括当前不可见部分的元素的高度\n        // scrollTop：代表当有滚动条时滚动条向下滚动的距离，也就是元素顶部被遮住的高度\n        // clientHeight：包括padding但不包括border、水平滚动条、margin的元素的高度\n        const rmHeight = target.scrollHeight - target.scrollTop;\n        const clHeight = target.clientHeight;\n        // 当下拉框失焦的时候，也就是不下拉的时候\n        if (rmHeight === 0 && clHeight === 0) {\n            this.setState({ scrollPage: 1 });\n        } else {\n            // 当下拉框下拉并且滚动条到达底部的时候\n            // 可以看成是分页，当滚动到底部的时候就翻到下一页\n            if (rmHeight < clHeight + 5) {\n                const { scrollPage } = this.state;\n                this.setState({ scrollPage: scrollPage + 1 });\n                //调用处理数据的函数增加下一页的数据\n                // this.loadOption(scrollPage + 1);\n            }\n        }\n    };\n\n    handleBlur = () => {\n        this.setState({ scrollPage: 1 });\n    }\n\n    render() {\n        const {width, placeholder, onChange, onSelect, filters=[], disabled, size, value, mode} = this.props;\n\n        const someFilters = filters.filter((filter, index) => index < this.state.scrollPage * 100)\n\n        return (\n            <div style={{width: `${width}px`}}>\n                <Select showSearch allowClear autoClearSearchValue dropdownMatchSelectWidth optionFilterProp=\"children\" size={size} value={value} placeholder={placeholder} onChange={onChange} onSelect={onSelect}  disabled={disabled} mode={mode}\n                        filterOption={inputSelectFilterOption}\n                        onPopupScroll={this.handleScroll}\n                        onBlur={this.handleBlur}\n                >\n                    {For(someFilters).then((item, index) => (\n                        <Select.Option key={index} value={isNull(item.value)? item.value: item.value.toString()}>\n                            {isNull(item.text)? item.text: item.text.toString()}\n                        </Select.Option>\n                    ))}\n                </Select>\n            </div>\n        )\n    }\n\n}","import React, {Component} from 'react';\nimport {Button, Card, Row, Tag, message} from \"antd\";\nimport {\n    checkResp,\n    compose,\n    defaultRowKey, defaultScroll,\n    defineProperty,\n    emptyFunc,\n    getParagraph,\n    If,\n    Img,\n    isEmpty,\n    isNotEmpty,\n    isNotNull,\n    isNull,\n    splitToList,\n    convertToPrams, selfFunc, isEmptyObject\n} from \"../../utils/HtmlUtils\";\nimport {getResources} from \"../../api\";\nimport './index.css'\nimport SimpleTable from \"../simple-table\";\nimport CacheInput from \"../cache-input\";\nimport SelectInput from \"../select-input/SelectInput\";\nexport default class DefaultTable extends Component {\n\n    constructor(props) {\n        super(props)\n\n        const defaultParams = this.getDefaultParams();\n\n        this.state = {\n            data: {},\n            resources: [],\n            columns: [],\n\n            pagination: defaultParams.pagination,\n            filters: defaultParams.filters,\n            sorter: defaultParams.sorter,\n\n            selectedRows: [],\n            selectedRowKeys: [],\n            clickRow: {},\n\n            dataLoading: true,\n            resourcesLoading: true,\n            visible: false,\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({columns: this.props.columnsConfig.map(this.newColumn)})\n        if (isNull(this.props.onResourceLoaded)) {\n            this.getResources();\n            this.refreshWithPrams();\n        }else {\n            const resources = await this.getResources();\n            this.props.onResourceLoaded(resources, () => {\n                this.updateFilters(this.props.defaultFilters, this.handleUpdated)\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filters !== this.props.filters) {\n            this.updateFilters(this.props.filters, this.handleUpdated)\n        }\n    }\n\n    getDataByCondition = async (pagination, filters, sorter) => {\n        const params = convertToPrams(pagination, filters, sorter)\n        const {onGetData=emptyFunc} = this.props;\n        const [isSubmit=true, error] = onGetData() || [];\n        if (isSubmit) {\n            // 只接收最后一次请求\n            const reqId = Math.random()\n            this.setState({dataLoading: true, reqId})\n            let data;\n            try {\n                data = await this.props.getDataApi(params).then(checkResp);\n            }catch (e) {\n                this.setState({dataLoading: false});\n            }\n            if (reqId === this.state.reqId) {\n                if (isNotNull(data)) {\n                    this.updateSelectedRow(data);\n                    this.setState({data});\n                }\n                this.setState({dataLoading: false});\n            }\n        }else if (isNotNull(error)){\n            message.error(error);\n        }\n    }\n\n    getResources = async callback => {\n        const needResourcesList = this.props.needResourcesList || [];\n        const resources = (this.props.onResourcesInit || emptyFunc)() || {};\n        if (isNotEmpty(needResourcesList)) {\n            const otherResources = await getResources({needResourcesList}).then(checkResp)\n            Object.assign(resources, otherResources);\n        }\n        this.setState({resources, resourcesLoading: false}, callback)\n        return resources;\n    }\n\n    updateSelectedRow = data => {\n        const {rowKey=defaultRowKey} = this.props;\n        const {selectedRowKeys} = this.state;\n        if (selectedRowKeys.length > 0) {\n            const {list=[]} = data;\n            const keyList = list.map(rowKey);\n            const newSelectedRows = [];\n            const newSelectedRowKeys = [];\n\n            for (const selectedRowKey of selectedRowKeys) {\n                const index = keyList.indexOf(selectedRowKey)\n                if (index !== -1) {\n                    newSelectedRowKeys.push(selectedRowKey);\n                    newSelectedRows.push(list[index]);\n                }\n            }\n            this.setSelectRows(newSelectedRowKeys, newSelectedRows)\n        }\n        return data;\n    }\n    getDefaultParams = () => {\n        return {\n            filters: Object.assign({},this.props.defaultFilters || {}, this.props.filters || {}),\n            sorter: Object.assign({}, this.props.defaultSorter) || {},\n            pagination: {\n                total: 0,\n                pageSize: isNull(this.props.defaultPageSize)? 10: this.props.defaultPageSize,\n                current: isNull(this.props.defaultCurrent)? 1: this.props.defaultCurrent,\n            },\n        }\n    }\n\n    getRowHtml = (rowKey) => {\n        return document.getElementsByClassName(\"row-\" + rowKey)[0]\n    }\n\n    setParams = (pagination=this.state.pagination, filters=this.state.filters, sorter=this.state.sorter, callback=emptyFunc) => {\n        (this.props.onUpdateParams || emptyFunc)(pagination, filters, sorter);\n        this.setState({pagination, filters, sorter}, callback)\n    }\n\n    updateParams = (pagination=this.state.pagination, filters={}, sorter=this.state.sorter, callback=emptyFunc) => {\n        this.setParams(pagination, Object.assign({}, this.state.filters, filters), sorter, callback);\n    }\n\n    updateFilters = (filters, callback=emptyFunc) => {\n        this.setParams(undefined, Object.assign({}, this.state.filters, filters), undefined, callback);\n    }\n\n    setFilter = (key, value, callback=emptyFunc) => {\n        this.updateFilters(defineProperty({}, key, value), callback);\n    }\n\n    setSelectRows = (selectedRowKeys, selectedRows, callback) => {\n        (this.state.data.list || []).map(this.props.rowKey).map(this.getRowHtml).forEach(element => {\n            element.className = element.className.replace(\" selected-row-color\", \"\");\n        })\n        selectedRowKeys.map(this.getRowHtml).forEach(element => {\n            element.className += ' selected-row-color';\n        })\n        this.setState({selectedRowKeys, selectedRows}, callback);\n    }\n\n    clearFilters = () => {\n        const { pagination, filters, sorter } = this.getDefaultParams();\n        this.setParams(pagination, filters, sorter)\n    }\n\n    refreshWithDefaultPrams = () => {\n        const { pagination, filters, sorter } = this.getDefaultParams();\n        this.getDataByCondition(pagination, filters, sorter);\n    }\n\n    refreshWithPrams = () => {\n        const { pagination, filters, sorter } = this.state;\n        this.getDataByCondition(pagination, filters, sorter);\n    }\n\n    handleRefresh = () => {\n        this.refreshWithPrams();\n    }\n\n    handleReset = () => {\n        this.clearFilters();\n        this.refreshWithDefaultPrams();\n    }\n\n    handleSelectRows = (selectedRowKeys, selectedRows, callback) => {\n        this.setSelectRows(selectedRowKeys, selectedRows, callback);\n    }\n\n    handleNotSelectAll = () => {\n        this.setSelectRows([],[]);\n    }\n\n    handleSelectAll = () => {\n        const selectedRows = [...this.state.data.list] || [];\n        const selectedRowKeys = selectedRows.map(this.props.rowKey);\n        this.setSelectRows(selectedRowKeys, selectedRows)\n    }\n\n    handleTableChange = (pagination, filters, sorter) => {\n        const {total, pageSize, current} = pagination;\n        pagination = {total, pageSize, current};\n        filters = Object.assign(this.state.filters, filters);\n        sorter = isEmptyObject(sorter)? this.props.defaultSorter: sorter;\n        this.setParams(pagination, filters, sorter)\n        this.getDataByCondition(pagination, filters, sorter);\n    }\n\n    handleUpdated = () => {\n        this.refreshWithPrams();\n    }\n\n    handleKeyUp = (e) => {\n        if (e.keyCode === 18) {\n            this.refreshWithPrams();\n        }\n    }\n\n    handleDoubleClick = (record) => {\n        this.setState({visible: true, clickRow: record})\n    }\n\n    handleVisibleChange = visible => {\n        this.setState({visible})\n    }\n\n    handleRowClassName = (row, index) => \"row-\" + (this.props.rowKey || defaultRowKey)(row, index)\n        + ((this.props.onRowClassName || emptyFunc)(row, index) || \"\");\n\n\n    render() {\n        const {onButtonsInit=emptyFunc,rowKey=defaultRowKey,isMultipleSelect=false} = this.props;\n        const {selectedRowKeys} = this.state;\n        const selectRowLength = selectedRowKeys.length;\n        const rowLength = (this.state.data.list || []).length;\n\n        let loading = this.state.dataLoading;\n\n        this.state.columns.map((column, index) => {\n            return Object.assign(column, this.newColumn(this.props.columnsConfig[index]));\n        })\n\n        return (\n            <Card onKeyUp={this.handleKeyUp} tabIndex=\"-1\" size=\"small\">\n                <Row type=\"flex\" className=\"margin-bottom-8\">\n                    <Button type=\"primary\" onClick={this.handleReset} className=\"margin-left-8\" disabled={loading}>重置</Button>\n                    <Button type=\"primary\" onClick={this.handleRefresh} className=\"margin-left-8\" disabled={loading}>刷新</Button>\n                    {If (isMultipleSelect && (selectRowLength < rowLength || rowLength === 0)).then(() => (\n                        <Button type=\"primary\" onClick={this.handleSelectAll} className=\"margin-left-8\" disabled={loading || rowLength === 0}>全选</Button>\n                    )).elseIf(isMultipleSelect && selectRowLength === rowLength).then(() => (\n                        <Button type=\"primary\" onClick={this.handleNotSelectAll} className=\"margin-left-8\" disabled={loading || rowLength === 0}>取消全选</Button>\n                    )).endIf()}\n                    {onButtonsInit(this)}\n                </Row>\n                <SimpleTable\n                    selectedRows={this.state.selectedRows}\n                    selectedRowKeys={selectedRowKeys}\n                    isMultipleSelect={this.props.isMultipleSelect}\n                    isShowRowSelection={true}\n                    onSelectRow={this.handleSelectRows}\n                    onClick={this.handleClick}\n                    onDoubleClick={this.handleDoubleClick}\n                    onSelectAll={this.handleSelectAll}\n                    size='small'\n                    scroll={defaultScroll}\n                    loading={loading}\n                    data={this.state.data}\n                    columns={this.state.columns}\n                    onChange={this.handleTableChange}\n                    rowKey={rowKey}\n                    rowClassName={this.handleRowClassName}\n                />\n            </Card>\n        )\n    }\n\n    newColumn = (columnConfig) => {\n        const column = {};\n        column.title = columnConfig.title;\n        column.key = columnConfig.key;\n        column.width = columnConfig.width;\n        column.dataIndex = columnConfig.dataIndex || columnConfig.key;\n        column.align = columnConfig.align || 'center';\n\n        if (columnConfig.type === 'search') {\n            this.newSearchColumn(column, columnConfig);\n        }else if (columnConfig.type === 'choose') {\n            this.newChooseColumn(column, columnConfig);\n        }else if (columnConfig.type === 'sorter') {\n            this.newSorterColumn(column, columnConfig);\n        }else if (columnConfig.type === 'chooseRender') {\n            this.newChooseRenderColumn(column, columnConfig);\n        }else if (columnConfig.type === 'image') {\n            this.newImage(column, columnConfig);\n        }else if (columnConfig.type === 'chooseInput') {\n            this.newChooseInput(column, columnConfig);\n        }else if (columnConfig.type === 'button') {\n            this.newButtonColumn(column, columnConfig);\n        }\n\n        if (isNotNull(columnConfig.ellipsis)) {\n            if (columnConfig.ellipsis === true) {\n                column.render = compose(column.render, getParagraph)\n            }else if (typeof columnConfig.ellipsis === 'string') {\n                const oldRender = column.render;\n                column.render = compose(oldRender, text => getParagraph(\n                    splitToList(columnConfig.ellipsis, text), text)\n                )\n            }\n        }else if (isNotNull(columnConfig.afterRender)) {\n            const oldRender = column.render || selfFunc;\n            column.render = (text, record) => columnConfig.afterRender(oldRender(text, record), record)\n        }else if (isNotNull(columnConfig.href)) {\n            const oldRender = column.render || selfFunc;\n            const afterRender = (value, record) => <a href={columnConfig.href(value, record)} target=\"_Blank\" rel=\"noopener noreferrer\">{value}</a>\n            column.render = (text, record) => afterRender(oldRender(text, record), record)\n        }\n\n        return column\n    }\n    newSearchColumn = (column, columnConfig) => {\n        const {filters} = this.state;\n\n        column.className = \"no-padding\";\n        column.title = (\n            <CacheInput\n                placeholder={columnConfig.title}\n                value={isNull(filters[columnConfig.key], [])[0]}\n                width={columnConfig.width}\n                onChange={value=>this.setFilter(columnConfig.key, [value], this.handleUpdated)}\n            />\n        );\n    }\n    newChooseColumn = (column, columnConfig) => {\n        const {filters, resources} = this.state;\n        const resource = resources[columnConfig.chooseMap];\n\n        column.filteredValue = filters[columnConfig.key] || null;\n        column.filterMultiple = false;\n        column.filters = resource;\n        this.newChooseRenderColumn(column, columnConfig);\n    }\n    newChooseRenderColumn = (column, columnConfig) => {\n        const {resources} = this.state;\n        const resource = resources[columnConfig.chooseMap];\n\n        column.render = key => {\n            if (isNotEmpty(resource) && isNotNull(key)) {\n                for (const item of resource) {\n                    if (item.value.toString() === key.toString()) {\n                        if (isNotNull(item.tag)) {\n                            return this.newTag(item.text, item.tag);\n                        }else if (item.renderHidden === true) {\n                            return '';\n                        }else {\n                            return item.text;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    newSorterColumn = (column,  columnConfig) => {\n        const {sorter} = this.state;\n\n        column.sorter = true;\n        column.sortOrder = sorter.field === columnConfig.key? (sorter.order || null) : null;\n    }\n    newImage = (column, columnConfig) => {\n        const converseUrl = src => isEmpty(src)? \"/loading.png\": src;\n\n        const {dataLoading:loading} = this.state;\n\n        column.className = \"no-padding\";\n        column.width = column.width || 60;\n        column.render = (src, row) => getParagraph(\n            <Img loading={loading} style={{width: '80px', height: '80px'}} alt='-' src={converseUrl(src, 80)}/>,\n            If(isNull(columnConfig.href)).then(() =>\n                <Img loading={loading} style={{height: '37px', maxWidth: '60px'}} alt='-' src={converseUrl(src, 60)}/>\n            ).else(() =>\n                <a href={columnConfig.href(src, row)} target=\"_Blank\" rel=\"noopener noreferrer\">\n                    <Img loading={loading} style={{ height: '37px', maxWidth: '60px' }} src={converseUrl(src, 60)} alt=\"-\"/>\n                </a>\n            )\n        )\n    }\n\n    newChooseInput = (column, columnConfig) => {\n        const {resources} = this.state;\n        let resource = resources[columnConfig.chooseMap];\n\n        if (Array.isArray(resource)) {\n            resource = [{text: '全部', value: \"----\"}, ...resource]\n        }\n\n        const handleSelectInputChange = value => {\n            if (value === \"----\") {\n                value = null\n            }\n            this.setFilter(columnConfig.key, [value]);\n        };\n        const handleSelectInputChanged = value => {\n            if (value === \"----\") {\n                value = null\n            }\n            this.setFilter(columnConfig.key, [value], this.handleUpdated);\n        };\n\n        column.className = \"no-padding\";\n        column.title = (\n            <SelectInput\n                size=\"small\"\n                width={columnConfig.width}\n                placeholder={columnConfig.title}\n                value={columnConfig.title}\n                onChange={handleSelectInputChange}\n                onSelect={handleSelectInputChanged}\n                filters={resource}\n            />\n        );\n\n        this.newChooseRenderColumn(column, columnConfig);\n    }\n\n    newButtonColumn = (column, columnConfig) => {\n        column.className = \"no-padding\";\n        column.render = (value, record) => (this.props.onButtonColumnInit || emptyFunc)(this, value, record);\n    }\n\n    newTag = (text, tag) => {\n        if (tag === 'no') {\n            return <Tag>{text}</Tag>\n        }\n        return <Tag color={tag}>{text}</Tag>\n    }\n}\n","import React, {Component} from \"react\";\nimport { Modal } from \"antd\";\nimport \"./DragModal.css\";\nimport {isNull} from \"../../utils/HtmlUtils\";\n\n// 获得随机数\nconst genNonDuplicateID = length => {\n    return Number(\n        Math.random()\n            .toString()\n            .substr(3, length) + Date.now()\n    ).toString(36);\n};\n\nexport default class DragModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.id = genNonDuplicateID(10);\n\n        if (isNull(props.width)) {\n            //默认30%\n            this.width = window.innerWidth * 0.3\n        } else if (Number.isInteger(props.width)) {\n            //如果是数字就默认px宽度\n            this.width =  props.width;\n        } else if (props.width.includes(\"%\")) {\n            //百分比宽度\n            this.width = Number.parseFloat(props.width.split(\"%\")[0]) / 100 * window.innerWidth\n        }else {\n            //px单位的硬编码宽度\n            this.width = Number.parseFloat(props.width.replace(\"px\", \"\"))\n        }\n\n        if (this.width >= window.innerWidth) {//超出屏幕宽度\n            this.width = window.innerWidth;\n        }\n\n        this.initLeft = (window.innerWidth - this.width) / 2;\n\n        this.dragDom = null; // 拖拽的目标元素\n        this.dragging = false; // 是否拖拽的开关\n        this.tLeft = 0; // ---|\n        this.tTop = 0; //  ------> 坐标轴\n    }\n\n    componentDidMount() {\n        this.initDragDom();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.dragDom) {\n            if (prevProps.visible === false && this.props.visible === true) {\n                this.onShowModal();\n            }\n        }else {\n            this.initDragDom();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return this.props.visible || nextProps.visible;\n    }\n\n    /*\n     * 初始渲染时，直接获取 Modal 的 dom 会获取不到。\n     * 设置 ref 使用 findDOMNode 也获取不到。\n     * 只能在定时器中使用原生方式来获取。\n     * */\n    initDragDom = () => {\n        setTimeout(() => {\n            // 获取唯一标示元素\n            const dragDom = document.getElementsByClassName(`d_${this.id}`)[0];\n            if (dragDom) {\n                console.log(`d_${this.id} init`)\n                dragDom.style.left = `${this.initLeft}px`;\n                dragDom.style.width = `${this.width}px`\n                dragDom.style.minWidth = \"30%\"\n                dragDom.style.top = '100px'\n                dragDom.style.zIndex = 1000;\n                this.dragDom = dragDom;\n\n            }\n        });\n    };\n\n    onShowModal = () => {\n        console.log(`d_${this.id} show`)\n        //其他窗口降一层\n        Array.from(document.getElementsByClassName(\"drag_modal\")).forEach(item => (item.style.zIndex -= 1));\n        this.dragDom.style.zIndex = 1000;\n    }\n\n    onMouseDown = e => {\n        e.preventDefault();\n        this.dragging = true; // 激活拖拽状态\n        /*\n        ** 将当前所有涉及可拖拽的浮层的 zindex = 999\n        ** 将当前拖拽目标的 zindex = 1000\n        **/\n        Array.from(document.getElementsByClassName(\"drag_modal\")).forEach(item => (item.style.zIndex -= 1));\n        this.dragDom.style.zIndex = 1000;\n\n        /*\n        * getBoundingClientRect: 返回一个 DomRect 对象\n        *   包含该元素的 top、right、bottom、left 值，对应的是到屏幕上方和左边的距离，单位 px\n        * */\n        const dragDomRect = this.dragDom.getBoundingClientRect();\n        const left0 = e.clientX;\n        const top0 = e.clientY;\n\n        document.onmousemove = e => {\n            e.preventDefault();\n            if (this.dragging) {\n                this.dragDom.style.left = `${dragDomRect.left + e.clientX - left0}px`;\n                this.dragDom.style.top = `${dragDomRect.top + e.clientY - top0}px`;\n            }\n        };\n    };\n\n    onMouseUp = e => {\n        e.preventDefault();\n        this.dragging = false; // 停止移动状态\n        document.onmousemove = null; // 停止鼠标移动事件\n    };\n\n    render() {\n        const { children, title = \"Drag-Modal\", wrapClassName = \"\", isHidden=false, visible=false } = this.props;\n\n        return (\n            <Modal\n                {...this.props}\n                mask={false}\n                width=\"100%\"\n                wrapClassName={`drag_modal d_${this.id} ${wrapClassName}`}\n                ref={ele => this.modal = ele}\n                visible={(!isHidden) && visible}\n                title={\n                    <div\n                        className=\"drag_title\"\n                        onMouseDown={this.onMouseDown}\n                        onMouseUp={this.onMouseUp}\n                    >\n                        {title}\n                    </div>\n                }\n            >\n                {children}\n            </Modal>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {Button, Col, DatePicker, Form, Input, InputNumber, message, Row, Select} from \"antd\";\nimport {defineProperty, emptyFunc, For, If, InputSelect, isBlank, isNotNull, isNull} from \"../../utils/HtmlUtils\";\nimport DragModal from \"../drag-modal/DragModal\";\nconst { TextArea } = Input;\n\n/*\n * form config配置\n *\n * label：表单字段中文名\n * type：类型，有input,inputSelect,select,datePicker,textArea,inputNumber\n * key：表单字段名\n * disabled：是否可编辑\n * placeholder：没有输入值时的提示语\n * resources：用于各种select的资源，text为中文，value为key\n * min：用于inputNumber，限制数字最小值\n * max：用于inputNumber，限制数字最大值\n *\n * hidden：是否隐藏\n * submit：是否随表单提交\n * selectedIndex：如果提交的key和selectedRow的key不一样，则key为提交的key，selectedIndex为selectedRow的key\n */\nexport default class DefaultModalButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: isNull(this.props.visible, false),\n            loading: false,\n        }\n        for (const config of this.props.formConfig || []) {\n            this.state[config.key] = config.value || null;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.visible !== this.props.visible && this.props.visible) {\n            this.handleShowModal();\n        }\n    }\n\n    setVisible = visible => {\n        if (this.props.onVisibleChange) {\n            this.props.onVisibleChange(visible);\n        }else {\n            this.setState({visible});\n        }\n    }\n\n    getVisible = () => {\n        return isNull(this.props.visible, this.state.visible);\n    }\n\n    handleShowModal = () => {\n        const { selectedRow={}, formConfig=[], onShowModal=emptyFunc } = this.props;\n        const [isShow=true, error] = onShowModal() || [];\n        if (isShow) {\n            const newState = {};\n            for (const config of formConfig) {\n                const selectedIndex = isNull(config.selectedIndex)? config.key: config.selectedIndex;\n                newState[config.key] = isNull(config.value)? selectedRow[selectedIndex]: config.value;\n                newState[config.key] = isBlank(newState[config.key])? null: newState[config.key];\n            }\n            this.showModal();\n            this.setState(newState);\n        }else {\n            message.error(error)\n        }\n    }\n\n    handleOk = async () => {\n        const { onSuccess=emptyFunc, formConfig=[] } = this.props;\n        const params = {};\n        for (const config of formConfig) {\n            const isTheGroup = isNull(config.groupBy) || For(config.groupBy).every((key, value) => this.state[key] === value);\n            if (config.submit !== false && isTheGroup) {\n                if (config.type === 'datePicker') {\n                    if (isNotNull(params[config.key] = this.state[config.key])) {\n                        params[config.key] = this.state[config.key].format('YYYY-MM-DD hh:mm:ss');\n                    }\n                }else if(config.type === 'list') {\n                    for (const childConfig of config.childConfig) {\n                        params[childConfig.key + 'List'] = this.state[config.key].map(item => item[childConfig.key]);\n                    }\n                }else if (isNotNull(config.mode)) {\n                    params[config.key] = Array.isArray(this.state[config.key])? this.state[config.key].join(\",\"): this.state[config.key]\n                }else {\n                    params[config.key] = this.state[config.key];\n                }\n            }\n        }\n        // 如果不是表单模态框，就是点击确定直接关闭模态框，否则设置按钮loading，等后台返回成功再关\n        if (isNotNull(this.props.modalRender)) {\n            this.closeModal();\n        }\n        try {\n            this.setState({loading: true});\n            const data = await this.props.updateApi(params);\n            onSuccess(data);\n            if (isNull(this.props.modalRender)) {\n                this.closeModal();\n            }\n        }finally {\n            this.setState({loading: false});\n        }\n    }\n\n    handleCancel = () => {\n\n    }\n\n    showModal = () => {\n        this.setVisible(true);\n    }\n\n    closeModal = () => {\n        this.setVisible(false);\n    }\n\n    handleChange = state => {\n        const newState = For (state).then((key, value) => {\n            return isBlank(value)? null: value;\n        })\n        this.setState(newState)\n    }\n\n    render() {\n        const { resources={}, formConfig=[], col=1 } = this.props\n        const params = this.state;\n        const onChange = this.handleChange;\n        return (\n            <span>\n                <Button style={this.props.buttonStyle || { marginLeft: 8 }}\n                        onClick={this.handleShowModal}\n                        disabled={isNull(this.props.disabled, false)}\n                        hidden={this.props.hidden}\n                        loading={this.state.loading}>\n                    {this.props.value || '编辑'}\n                </Button>\n                <DragModal\n                    confirmLoading={this.props.confirmLoading || this.state.loading}\n                    isHidden={this.props.isHidden}\n                    title={this.props.title || '标题'}\n                    visible={this.getVisible()}\n                    onOk={this.handleOk}\n                    onCancel={this.closeModal}\n                    width={this.props.width || (col * 400)}\n                    footer={this.props.footer}\n                    centered={this.props.centered}>\n                    {If(isNotNull(this.props.modalRender)).then(() => (\n                        this.props.modalRender(this.state)\n                    )).else(() => (\n                        converseToForm({formConfig, params, resources, col, onChange})\n                    ))}\n                </DragModal>\n            </span>\n        );\n    }\n}\n\nexport const converseToForm = ({formConfig=[], params={}, resources={}, col=1, size='default', onChange=emptyFunc, onSubmit=emptyFunc}) => (\n    <Form labelCol={{ span: 6 }} wrapperCol={{ span: 14 }} layout=\"horizontal\" size='small'>\n        <Row gutter={24}>\n            {For(formConfig).if(config => !config.hidden).flatThen(config => (\n                If(config.type === 'list').then(() => (\n                    For (params[config.key]).flatThen((param, jndex) => (\n                        For (config.childConfig).then((config) => (\n                            converseToFormItem(config, param, resources, col, size, config.key + '-' + jndex + '-' + config.key, onChange, onSubmit)\n                        )).filter(isNotNull)\n                    ))\n                )).else(() => (\n                    converseToFormItem(config, params, resources, col, size, config.key, onChange, onSubmit)\n                ))\n            )).filter(isNotNull)}\n        </Row>\n    </Form>\n)\n\nconst converseToFormItem = ({label,type,key,disabled,placeholder,resource,min,max,groupBy,mode,suffix,autoSize,col:itemCol=1,render}, params={}, resources={}, col=1, size='default', listKey=Math.random(), onChange=emptyFunc, onSubmit=emptyFunc) => (\n    If(isNull(groupBy) || For(groupBy).every((key, value) => params[key] === value)).then(() => (\n        <Col span={24 * itemCol / col} key={listKey}>\n            <Form.Item label={label} style={size === 'small'? {margin: 0}: {}}>\n                {If(type === 'input').then(() => (\n                    <Input value={params[key]} disabled={disabled} onChange={e => onChange(defineProperty({}, key, e.target.value))} placeholder={placeholder} suffix={suffix}/>\n                )).elseIf(type === 'inputSelect').then(() => (\n                    <InputSelect resource={resources[resource]} value={params[key]} disabled={disabled} onChange={value => onChange(defineProperty({}, key, value))}/>\n                )).elseIf(type === 'select').then(() => (\n                    <Select value={(params[key])} disabled={disabled} onChange={value => onChange(defineProperty({}, key, value))}>\n                        {For(resources[resource]).then((item, index) => (\n                            <Select.Option key={index} value={(item.value)}>{item.text}</Select.Option>\n                        ))}\n                    </Select>\n                )).elseIf(type === 'datePicker').then(() => (\n                    <DatePicker value={params[key]} showTime={true} onChange={value => onChange(defineProperty({}, key, value))} />\n                )).elseIf(type === 'textArea').then(() => (\n                    <TextArea value={params[key]} disabled={disabled} onChange={e => onChange(defineProperty({}, key, e.target.value))} placeholder={placeholder} autoSize={autoSize}/>\n                )).elseIf(type === 'inputNumber').then(() => (\n                    <InputNumber value={params[key]} disabled={disabled} onChange={value => onChange(defineProperty({}, key, value))} placeholder={placeholder} min={min} max={max} suffix={suffix}/>\n                )).elseIf(type === 'inputGroup').then(() => (\n                    render(params[key], value => onChange(defineProperty({}, key, value)))\n                )).endIf()}\n            </Form.Item>\n        </Col>\n    )).endIf()\n)","import React, {Component} from \"react\";\nimport DefaultModalButton from \"../../components/default-modal-button/DefaultModalButton\";\nimport {addJob} from \"../../api\";\n\nexport default class AddJob extends Component {\n    render() {\n        return (\n            <DefaultModalButton\n                {...this.props}\n                title=\"新增Job\"\n                value='新增Job'\n                formConfig={this.formConfig}\n                updateApi={addJob}\n            />\n        )\n    }\n\n    formConfig = [\n        {label: 'Job名', key: 'name', type: 'input'},\n        {label: 'Job时钟', key: 'cron', type: 'input'},\n    ];\n}","import React,{Component} from \"react\"\nimport { Modal, Button } from 'antd';\nimport {isNull} from \"../../utils/HtmlUtils\";\n\nexport default class SimpleModalButton extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            visible: false,\n            loading: false,\n        };\n    }\n\n    showModal = () => {\n        const onShowModal = this.props.onShowModal || (() => true);\n        const isShowModal = isNull(onShowModal(), true);\n        this.setState({visible: isShowModal})\n    };\n\n    handleOk = () => {\n        this.setState({loading: true})\n        const onOk = this.props.onOk || (async () => true);\n        onOk().then((isCloseModal = true) => {\n            this.setState({\n                visible: !isCloseModal,\n            })\n        }).finally(() => this.setState({loading: false}))\n    };\n\n    handleCancel = () => {\n        const onCancel = this.props.onCancel || (() => true);\n        const isCloseModal = isNull(onCancel(), true);\n        this.setState({visible: !isCloseModal})\n    };\n\n    render() {\n        const { visible } = this.state;\n        return (\n            <span>\n                <Button style={this.props.buttonStyle || {marginLeft: \"8px\"}}\n                        onClick={this.showModal}\n                        disabled={isNull(this.props.disabled, false)}\n                        hidden={this.props.hidden}\n                >{this.props.buttonText || this.props.title || '编辑'}</Button>\n                <Modal\n                    title={this.props.title || '标题'}\n                    visible={visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    width={this.props.width}\n                    footer={this.props.footer}\n                    centered={this.props.centered}\n                    confirmLoading={this.state.loading}\n                >\n                    {this.props.children}\n                </Modal>\n            </span>\n        );\n    }\n}\n// {If (Array.isArray(this.props.children) || ['span'].includes(this.props.children.type) || ['Form'].includes(this.props.children.type.name)).then(() => (\n//     this.props.children\n// )).else(() => (\n//     <this.props.children.type {...this.props.children.props} visible={this.state.visible}/>\n// ))}\n// {\n//     typeof this.props.children !== \"object\"\n//     || Array.isArray(this.props.children)\n//     || isNull(this.props.children.type)\n//     || this.props.children.type.name === \"Form\"\n//         ? this.props.children\n//         : React.cloneElement(this.props.children, {visible: this.state.visible})\n// }","import React, {Component} from \"react\";\nimport SimpleModalButton from \"../../components/simple-modal-button\";\nimport {startJob} from \"../../api\";\nimport {isEmptyObject} from \"../../utils/HtmlUtils\";\n\nexport default class StartJob extends Component {\n    startJob = async () => {\n        await startJob({name: this.props.selectedRow.name}).then(() => this.props.onSuccess())\n    }\n\n    render() {\n        const { selectedRow={} } = this.props\n        const { name, status} = selectedRow;\n        return (\n            <SimpleModalButton buttonStyle={{marginLeft: \"8px\"}} title=\"运行Job\" onOk={this.startJob} disabled={isEmptyObject(selectedRow) || status === 1}>\n                <span>\n                    确定运行Job：{name}\n                </span>\n            </SimpleModalButton>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport SimpleModalButton from \"../../components/simple-modal-button\";\nimport {runJob} from \"../../api\";\nimport {isEmptyObject} from \"../../utils/HtmlUtils\";\n\nexport default class RunJob extends Component {\n    runJob = async () => {\n        await runJob({name: this.props.selectedRow.name}).then(() => this.props.onSuccess())\n    }\n\n    render() {\n        const { selectedRow={} } = this.props\n        const { name } = selectedRow;\n        return (\n            <SimpleModalButton buttonStyle={{marginLeft: \"8px\"}} title=\"运行一次\" onOk={this.runJob} disabled={isEmptyObject(selectedRow)}>\n                <span>\n                    确定运行一次：{name}\n                </span>\n            </SimpleModalButton>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport SimpleModalButton from \"../../components/simple-modal-button\";\nimport {stopJob} from \"../../api\";\nimport {isEmptyObject} from \"../../utils/HtmlUtils\";\n\nexport default class StopJob extends Component {\n    stopJob = async () => {\n        await stopJob({name: this.props.selectedRow.name}).then(() => this.props.onSuccess())\n    }\n\n    render() {\n        const { selectedRow={} } = this.props\n        const { name, status} = selectedRow;\n        return (\n            <SimpleModalButton buttonStyle={{marginLeft: \"8px\"}} title=\"停止Job\" onOk={this.stopJob} disabled={isEmptyObject(selectedRow) || status === -1}>\n                <span>\n                    确定停止Job：{name}\n                </span>\n            </SimpleModalButton>\n        )\n    }\n}","import JobManager from \"../pages/JobManager\";\n\nexport const menuList = [\n    { title: \"定时任务管理\", key: \"/JobManager\", icon: \"video-camera\", component: JobManager}\n]\n","import React, {Component} from \"react\";\nimport {listJob} from \"../../api\";\nimport DefaultTable from \"../../components/default-table\";\nimport {idRowKey} from \"../../utils/HtmlUtils\";\nimport AddJob from \"./AddJob\";\nimport StartJob from \"./StartJob\";\nimport RunJob from \"./RunJob\";\nimport StopJob from \"./StopJob\";\n\nexport default class VideoInfoManager extends Component {\n\n    columnsConfig = [\n        {title: 'Job名称', key: 'name', width: 300, type: 'search', ellipsis: true},\n        {title: 'Job时钟', key: 'cron', width: 300, type: 'search', ellipsis: true},\n        {title: '状态', key: 'status', width: 100, type: 'choose', chooseMap: 'statusList'},\n    ];\n\n    handleButtonsInit = (that) => {\n        const { state, handleUpdated } = that\n        const { selectedRows } = state\n        const selectedRow = selectedRows[0] || {}\n        return (\n            <>\n                <AddJob selectedRow={selectedRow} onSuccess={handleUpdated}/>\n                <StartJob selectedRow={selectedRow} onSuccess={handleUpdated}/>\n                <RunJob selectedRow={selectedRow} onSuccess={handleUpdated}/>\n                <StopJob selectedRow={selectedRow} onSuccess={handleUpdated}/>\n            </>\n        )\n    }\n\n    handleResourcesInit = () => ({\n        statusList: [{value: 0, text: '就绪', tag: 'blue'}, {value: 1, text: '启用', tag: 'green'}, {value: -1, text: '停用', tag: 'red'}],\n    })\n\n    render() {\n        return (\n            <DefaultTable\n                isShowRowSelection={true}\n                needResourcesList={[]}\n                defaultPageSize={20}\n                rowKey={idRowKey}\n                columnsConfig={this.columnsConfig}\n                getDataApi={listJob}\n                onButtonsInit={this.handleButtonsInit}\n                onResourcesInit={this.handleResourcesInit}\n            />\n        )\n    }\n}","import React, {Component} from 'react';\nimport './index.less';\nimport {Button, Col, Icon, Layout, Menu, Result, Row, Tabs, Typography} from \"antd\";\nimport {For, If, isEmpty, isNotNull, isNull} from \"../utils/HtmlUtils\";\nimport TweenOne from 'rc-tween-one';\nimport QueueAnim from 'rc-queue-anim';\nimport LoginModal from \"./LoginModal\";\nimport {isLogin, reqLogin, reqLoginOut} from \"../api\";\nimport {HashRouter, Link} from \"react-router-dom\";\nimport {menuList} from \"../config/menuConfig\";\nconst { Header, Content, Sider, Footer } = Layout;\nconst { Title} = Typography;\n\nconst menuMap = {};\n(function converseToMap (list) {\n    list.forEach(item => {\n        if (item.children) {\n            converseToMap(item.children)\n        }else {\n            menuMap[item.key] = item;\n        }\n    })\n})(menuList)\n\nexport default class App extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: false,\n            user: null,\n            selectedKeyList: [],\n            selectedFirstKey: \"/rank\",\n        }\n    }\n\n    componentDidMount() {\n        this.checkIsLogin();\n    }\n\n    checkIsLogin = () => {\n        isLogin().then(this.login).catch(this.loginOut)\n    }\n\n    login = (user) => {\n        this.setState({user});\n    }\n\n    loginOut = () => {\n        this.setState({user: null});\n    }\n\n    reqLoginOut = () => {\n        reqLoginOut().then(this.loginOut)\n    }\n\n    reqLogin = (username, password, callback) => {\n        reqLogin(username, password).then(this.login).catch(callback)\n    }\n\n    toggleCollapsed = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n\n    handleSelected = (selectedKey) => {\n        let selectedKeyList = this.state.selectedKeyList;\n        if (selectedKeyList.includes(selectedKey)) {\n            selectedKeyList = this.state.selectedKeyList.filter(key => key !== selectedKey);\n        }\n        selectedKeyList.unshift(selectedKey);\n        this.setState({selectedKeyList})\n    }\n\n    handleSelectedFirstKey = (selectedFirstKey) => {\n        this.setState({selectedFirstKey})\n    }\n\n    remove = (targetKey) => {\n        const selectedKeyList = this.state.selectedKeyList.filter(selectedKey => selectedKey !== targetKey);\n        this.setState({ selectedKeyList })\n    }\n\n    onEdit = (targetKey, action) => {\n        this[action](targetKey)\n    }\n\n    createMenu = (menuList) => {\n        return menuList.map((menu) => {\n            if (isNull(menu.children)) {\n                return (\n                    <Menu.Item key={menu.key} title={menu.title}>\n                        <Link to={menu.key} onClick={this.handleSelected.bind(this, menu.key)}>\n                            {If (isNotNull(menu.icon)).then(() => (\n                                <Icon type={menu.icon} />\n                            )).endIf()}\n                            <span>{menu.title}</span>\n                        </Link>\n                    </Menu.Item>\n                )\n            }else {\n                return (\n                    <Menu.SubMenu\n                        key={menu.key}\n                        title={(\n                            <span style={{ height: '100%', display: 'block' }}>\n                                {If (isNotNull(menu.icon)).then(() => (\n                                    <Icon type={menu.icon} />\n                                )).endIf()}\n                            </span>\n                        )}>\n                        {this.createMenu(menu.children)}\n                    </Menu.SubMenu>\n                )\n            }\n        })\n    }\n\n    render() {\n        const selectedList = this.state.selectedKeyList.map(selectedKey => menuMap[selectedKey]);\n        return (\n            <HashRouter>\n                <Layout style={{minHeight: \"100vh\"}}>\n                    <Header style={{background: \"white\", height: 'auto'}}>\n                        <div style={{float: \"left\", width: \"150px\"}}>\n                            <Title level={2} strong={false} style={{margin: \"0px\"}} className=\"primary-color\">\n                                任务后台\n                            </Title>\n                        </div>\n                        <Menu mode=\"horizontal\" className=\"header-menu\" selectedKeys={this.state.selectedFirstKey} style={{width: '40%', float: 'left'}}>\n                            {If(isNotNull(this.state.user)).then(()=>(\n                                For (menuList).then(menu => (\n                                    <Menu.Item key={menu.key} title={menu.title} onClick={()=>this.handleSelectedFirstKey(menu.key)}>\n                                        <span>{menu.title}</span>\n                                    </Menu.Item>\n                                ))\n                            )).endIf()}\n                        </Menu>\n                        <Menu mode=\"horizontal\" style={{float: \"right\"}} selectable={false}>\n                            {If(isNotNull(this.state.user)).then(() => (\n                                <Menu.Item onClick={this.reqLoginOut}>\n                                    <Icon type=\"logout\" />退出登录\n                                </Menu.Item>\n                            )).endIf()}\n                        </Menu>\n                    </Header>\n                    <Layout>\n                        <Sider width={200} collapsed={this.state.collapsed} theme=\"light\">\n                            {If(isNotNull(this.state.user)).then(() => <>\n                                <div style={{ width: '100%', textAlign: 'right' }}>\n                                    <Button onClick={this.toggleCollapsed} type=\"link\">\n                                        <Icon type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'} />\n                                    </Button>\n                                </div>\n                                <QueueAnim duration={[200, 0]} interval={[50, 0]} type={['left']} component={Menu} componentProps={{mode: \"inline\", selectedKeys: this.state.selectedKeyList[0], style: {borderRight: 0}}}>\n                                {/*<Menu mode=\"inline\" selectedKeys={this.state.selectedKeyList[0]} style={{borderRight: 0 }}>*/}\n                                    {this.createMenu(menuList)}\n                                {/*</Menu>*/}\n                                </QueueAnim>\n                            </>).endIf()}\n                        </Sider>\n                        <Layout>\n                            <Content>\n                                {If(isNotNull(this.state.user)).then(() => <>\n                                    <Tabs type=\"editable-card\"\n                                          style={{marginTop:10,marginLeft:5,marginRight:5,}}\n                                          hideAdd={true}\n                                          onChange={this.handleSelected.bind(this)}\n                                          activeKey={this.state.selectedKeyList[0]}\n                                          onEdit={this.onEdit}>\n                                        {For (selectedList).then((selected, index) => (\n                                            <Tabs.TabPane tab={selected.title} key={selected.key} closable={true}>\n                                                <TweenOne reverse={index !== 0} animation={{y: 0, opacity: 1, duration: 200}} style={{ transform: 'translateY(-10px)' , opacity: 0}}>\n                                                    <selected.component selectedTab={selected} isHidden={index !== 0} {...this.state}/>\n                                                </TweenOne>\n                                            </Tabs.TabPane>\n                                        ))}\n                                    </Tabs>\n                                    {If (isEmpty(this.state.selectedKeyList)).then(() => (\n                                        <Result\n                                            style={{ marginTop: 100 }}\n                                            icon={<img alt='' src='/min-logo.png'/>}\n                                            title=\"欢迎来到TiliTili定时任务后台!\"\n                                        />\n                                    )).endIf()}\n                                </>).else(() => <>\n                                    <LoginModal onLogin={this.reqLogin} onRegister={this.reqRegister}/>\n                                </>)}\n                            </Content>\n                            <Footer style={{backgroundColor: \"white\"}}>\n                                <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                                    <Col>\n                                        <a href=\"http://beian.miit.gov.cn/\" target=\"_Blank\" rel=\"noopener noreferrer\"></a>\n                                    </Col>\n                                </Row>\n                            </Footer>\n                        </Layout>\n                    </Layout>\n]                </Layout>\n            </HashRouter>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Index is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./utils/prototypeUtil\"\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}